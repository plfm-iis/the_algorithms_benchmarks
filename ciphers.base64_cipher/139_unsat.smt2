(set-logic ALL)
(declare-const text_VAR String)
(assert (< 0 (str.len text_VAR)))
(assert (> (str.len text_VAR) 0))
(assert (str.contains "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" (str.at text_VAR 0)))
(assert (< 1 (str.len text_VAR)))
(assert (> (str.len text_VAR) 1))
(assert (str.contains "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" (str.at text_VAR 1)))
(assert (< 2 (str.len text_VAR)))
(assert (> (str.len text_VAR) 2))
(assert (str.contains "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" (str.at text_VAR 2)))
(assert (< 3 (str.len text_VAR)))
(assert (> (str.len text_VAR) 3))
(assert (str.contains "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" (str.at text_VAR 3)))
(assert (< 4 (str.len text_VAR)))
(assert (> (str.len text_VAR) 4))
(assert (str.contains "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" (str.at text_VAR 4)))
(assert (not (< 5 (str.len text_VAR))))
(assert (< 0 (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) ""))))
(assert (> (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) "")) 0))
(assert (> (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) "")) 1))
(assert (> (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) "")) 2))
(assert (> (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) "")) 3))
(assert (< 4 (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) ""))))
(assert (> (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) "")) 4))
(assert (> (str.len (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ "" (str.at text_VAR 0)) (str.at text_VAR 1)) (str.at text_VAR 2)) (str.at text_VAR 3)) (str.at text_VAR 4)) "")) 5))
(check-sat)
(get-value (text_VAR))
