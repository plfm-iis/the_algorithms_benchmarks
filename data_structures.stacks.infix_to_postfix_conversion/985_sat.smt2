(set-logic ALL)
(declare-const expression_str_VAR String)
(assert (< 0 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 0))
(assert (not (= (str.at expression_str_VAR 0) ")")))
(assert (not (= (str.at expression_str_VAR 0) "]")))
(assert (not (= (str.at expression_str_VAR 0) "}")))
(assert (< 1 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 1))
(assert (not (= (str.at expression_str_VAR 1) ")")))
(assert (not (= (str.at expression_str_VAR 1) "]")))
(assert (not (= (str.at expression_str_VAR 1) "}")))
(assert (< 2 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 2))
(assert (not (= (str.at expression_str_VAR 2) ")")))
(assert (not (= (str.at expression_str_VAR 2) "]")))
(assert (not (= (str.at expression_str_VAR 2) "}")))
(assert (< 3 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 3))
(assert (not (= (str.at expression_str_VAR 3) ")")))
(assert (not (= (str.at expression_str_VAR 3) "]")))
(assert (not (= (str.at expression_str_VAR 3) "}")))
(assert (< 4 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 4))
(assert (not (= (str.at expression_str_VAR 4) ")")))
(assert (not (= (str.at expression_str_VAR 4) "]")))
(assert (not (= (str.at expression_str_VAR 4) "}")))
(assert (< 5 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 5))
(assert (not (= (str.at expression_str_VAR 5) ")")))
(assert (not (= (str.at expression_str_VAR 5) "]")))
(assert (not (= (str.at expression_str_VAR 5) "}")))
(assert (< 6 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 6))
(assert (not (= (str.at expression_str_VAR 6) ")")))
(assert (not (= (str.at expression_str_VAR 6) "]")))
(assert (not (= (str.at expression_str_VAR 6) "}")))
(assert (< 7 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 7))
(assert (not (= (str.at expression_str_VAR 7) ")")))
(assert (not (= (str.at expression_str_VAR 7) "]")))
(assert (not (= (str.at expression_str_VAR 7) "}")))
(assert (not (< 8 (str.len expression_str_VAR))))
(assert (< 0 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 0))
(assert (str.in.re (str.at expression_str_VAR 0) (re.+ (re.union (re.range "A" "Z") (re.range "a" "z")))))
(assert (< 1 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 1))
(assert (str.in.re (str.at expression_str_VAR 1) (re.+ (re.union (re.range "A" "Z") (re.range "a" "z")))))
(assert (< 2 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 2))
(assert (str.in.re (str.at expression_str_VAR 2) (re.+ (re.union (re.range "A" "Z") (re.range "a" "z")))))
(assert (< 3 (str.len expression_str_VAR)))
(assert (> (str.len expression_str_VAR) 3))
(assert (not (str.in.re (str.at expression_str_VAR 3) (re.+ (re.union (re.range "A" "Z") (re.range "a" "z"))))))
(check-sat)
(get-value (expression_str_VAR))
